version: '3.8'

services:
  # Oracle Database
  oracle:
    image: container-registry.oracle.com/database/express:21.3.0-xe
    container_name: facturacion-oracle
    environment:
      - ORACLE_PWD=OraclePass123
      - ORACLE_CHARACTERSET=AL32UTF8
    ports:
      - "1521:1521"
      - "5500:5500"
    volumes:
      - oracle_data:/opt/oracle/oradata
      - ./scripts/oracle:/docker-entrypoint-initdb.d
    networks:
      - facturacion-network
    healthcheck:
      test: ["CMD", "sqlplus", "-L", "sys/OraclePass123@//localhost:1521/XE", "as", "sysdba", "@/dev/null"]
      interval: 30s
      timeout: 10s
      retries: 5

  # MongoDB
  mongodb:
    image: mongo:7.0
    container_name: facturacion-mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin123
      - MONGO_INITDB_DATABASE=auditoria_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongodb:/docker-entrypoint-initdb.d
    networks:
      - facturacion-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Servicio de Client (Ruby on Rails)
  client-service:
    build:
      context: ./ClientService
      dockerfile: Dockerfile
    container_name: facturacion-client-service
    environment:
      - RAILS_ENV=production
      - ORACLE_HOST=oracle
      - ORACLE_PORT=1521
      - ORACLE_DATABASE=XE
      - ORACLE_USERNAME=client_user
      - ORACLE_PASSWORD=client_pass
      - AUDIT_SERVICE_URL=http://audit-service:3002
    ports:
      - "3001:3001"
    depends_on:
      oracle:
        condition: service_healthy
      audit-service:
        condition: service_started
    networks:
      - facturacion-network
    restart: unless-stopped

  # Servicio de Auditor√≠a (Ruby on Rails + MongoDB)
  audit-service:
    build:
      context: ./AuditService
      dockerfile: Dockerfile
    container_name: facturacion-audit-service
    environment:
      - RAILS_ENV=production
      - MONGODB_HOST=mongodb:27017
      - MONGODB_DATABASE=audit_db
    ports:
      - "3002:3002"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - facturacion-network
    restart: unless-stopped

  # Servicio de Facturas (.NET Core)
  invoices-service:
    build:
      context: ./InvoicesService
      dockerfile: Dockerfile
    container_name: facturacion-invoices-service
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__OracleConnection=Data Source=oracle:1521/XE;User Id=facturas_user;Password=facturas_pass;
      - Services__ClientService=http://client-service:3001
      - Services__AuditService=http://audit-service:3002
    ports:
      - "5000:80"
    depends_on:
      oracle:
        condition: service_healthy
      client-service:
        condition: service_started
      audit-service:
        condition: service_started
    networks:
      - facturacion-network
    restart: unless-stopped

  # Nginx Reverse Proxy (Opcional)
  nginx:
    image: nginx:alpine
    container_name: facturacion-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - client-service
      - audit-service
      - invoices-service
    networks:
      - facturacion-network
    restart: unless-stopped

volumes:
  oracle_data:
    driver: local
  mongodb_data:
    driver: local

networks:
  facturacion-network:
    driver: bridge
